/**
 * Evoke Website API
 * This API provides endpoints used by the Evoke demoparty website. <br><br><a href='https://www.evoke.eu/imprint/'>Imprint</a><br><a href='https://www.evoke.eu/privacy/'>Privacy Information</a>
 *
 * OpenAPI spec version: 0.1.0
 * Contact: api@evoke.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Registration model module.
 * @module model/Registration
 * @version 0.1.0
 */
class Registration {
    /**
     * Constructs a new <code>Registration</code>.
     * Registration model
     * @alias module:model/Registration
     */
    constructor() { 
        
        Registration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Registration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Registration} obj Optional instance to populate.
     * @return {module:model/Registration} The populated <code>Registration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Registration();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('gravatar_hash')) {
                obj['gravatar_hash'] = ApiClient.convertToType(data['gravatar_hash'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('website_url')) {
                obj['website_url'] = ApiClient.convertToType(data['website_url'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('country_name')) {
                obj['country_name'] = ApiClient.convertToType(data['country_name'], 'String');
            }
            if (data.hasOwnProperty('g-recaptcha-response')) {
                obj['g-recaptcha-response'] = ApiClient.convertToType(data['g-recaptcha-response'], 'String');
            }
        }
        return obj;
    }


}

/**
 * ID
 * @member {Number} id
 */
Registration.prototype['id'] = undefined;

/**
 * Handle or name of the registered user
 * @member {String} name
 */
Registration.prototype['name'] = undefined;

/**
 * Group of the registered user
 * @member {String} group
 */
Registration.prototype['group'] = undefined;

/**
 * Hash to use with gravatar
 * @member {String} gravatar_hash
 */
Registration.prototype['gravatar_hash'] = undefined;

/**
 * The users email address
 * @member {String} email
 */
Registration.prototype['email'] = undefined;

/**
 * optional Website of the registered user
 * @member {String} website_url
 */
Registration.prototype['website_url'] = undefined;

/**
 * ISO country code of the registered user
 * @member {String} country
 */
Registration.prototype['country'] = undefined;

/**
 * Country name of the registered user
 * @member {String} country_name
 */
Registration.prototype['country_name'] = undefined;

/**
 * reCaptcha response to be verified server side
 * @member {String} g-recaptcha-response
 */
Registration.prototype['g-recaptcha-response'] = undefined;






export default Registration;

